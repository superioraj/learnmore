# Two Hand tracking sample(Arrow Middle+cv mapping)

```
import cv2
import mediapipe as mp
import numpy as np

# Mediapipe 손 검출 라이브러리 초기화
mp_hands = mp.solutions.hands
hands = mp_hands.Hands()
mp_drawing = mp.solutions.drawing_utils

# 웹캠으로부터 영상을 받아오기 위한 코드
cap = cv2.VideoCapture(0)

# 채도를 0으로 설정
cap.set(cv2.CAP_PROP_SATURATION, 0)

while cap.isOpened():
    ret, frame = cap.read()

    if not ret:
        continue

    # Mediapipe는 RGB 이미지를 사용하기 때문에, BGR에서 RGB로 변환
    frame = cv2.flip(frame, 1)
    image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # 손을 검출
    results = hands.process(image)

    # 검출된 손의 랜드마크를 화면에 그림
    if results.multi_hand_landmarks:
        for landmarks in results.multi_hand_landmarks:
            mp_drawing.draw_landmarks(frame, landmarks, mp_hands.HAND_CONNECTIONS)

            # Landmark 8의 좌표 출력을 위한 코드 추가
            landmark_8 = landmarks.landmark[8]  # Landmark 8을 얻음
            lm_x, lm_y = int(landmark_8.x * frame.shape[1]), int(landmark_8.y * frame.shape[0])  # 좌표 계산
            lm_text = f"Index_finger_Tip x:{lm_x}, y:{lm_y}"
            cv2.putText(frame, lm_text, (10, 35), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 255), 1, cv2.LINE_AA)

            square_size = int(frame.shape[1] * 0.4)  # 크기 200% 증가
            start_x = frame.shape[1] // 2 - square_size // 2
            start_y = frame.shape[0] // 2 - square_size // 2
            boxes = [
                (start_x + square_size // 3, start_y, square_size // 3, square_size // 3),  # Up
                (start_x + 2 * square_size // 3, start_y + square_size // 3, square_size // 3, square_size // 3),  # Right
                (start_x + square_size // 3, start_y + 2 * square_size // 3, square_size // 3, square_size // 3),  # Down
                (start_x, start_y + square_size // 3, square_size // 3, square_size // 3)  # Left
            ]

            for i, (x, y, w, h) in enumerate(boxes):
                if x < lm_x < x + w and y < lm_y < y + h:
                    if i == 0: print("Up")
                    elif i == 1: print("Right")
                    elif i == 2: print("Down")
                    elif i == 3: print("Left")

            # 화살표 스타일의 사각형 그리기 위치 수정
            directions = ['Up', 'Right', 'Down', 'Left']

            for idx, (x, y, w, h) in enumerate(boxes):
                cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

                # 방향 문자 위치 수정
                text_size = cv2.getTextSize(directions[idx], cv2.FONT_HERSHEY_SIMPLEX, 1.6, 2)[0]  # 글자 크기 200% 증가
                text_x = x + (w - text_size[0]) // 2
                text_y = y + (h + text_size[1]) // 2
                cv2.putText(frame, directions[idx],
                            (text_x, text_y),
                            cv2.FONT_HERSHEY_SIMPLEX, 1.6, (255, 255, 255), 2, cv2.LINE_AA)  # 글자 크기 200% 증가

    # 프레임 크기를 800x450으로 변경
    frame_resized = cv2.resize(frame, (800, 450))

    # 영상을 화면에 출력
    cv2.imshow('Hand Tracking', frame_resized)

    if cv2.waitKey(10) & 0xFF == ord('q'):
        break

hands.close()
cap.release()
cv2.destroyAllWindows()

```
